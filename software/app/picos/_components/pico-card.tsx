"use client"

import { fetchPicos } from "@/app/assignments/actions"
import { StatusBubble } from "@/components/status-bubble"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Pico } from "@/lib/types/pico"
import { Cpu } from "lucide-react"
import { useEffect, useState } from "react"
import LiveCommandFeed from "./live-command-feed"

export default function PicoCard() {
  const [picos, setPicos] = useState<Pico[]>([])

  useEffect(() => {
    const interval = setInterval(() => {
      const load = async () => {
        const [picos] = await Promise.all([fetchPicos()])
        setPicos(picos)
      }
      load()
    }, 5000)
    return () => clearInterval(interval)
  }, [])

  return (
    <>
      {picos.map((pico) => {
        return (
          <Card key={pico.id} className="relative">
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <StatusBubble status={pico.status} />
                  <div>
                    <CardTitle className="text-lg">Pico Controller {pico.id}</CardTitle>
                    <CardDescription className="flex items-center gap-2">
                      <Cpu className="h-3 w-3" />
                      {pico.macAddress}
                    </CardDescription>
                  </div>
                </div>
                <div className="flex flex-col items-end gap-1">
                  <Badge variant={pico.status === "online" ? "default" : "outline"}>
                    {pico.status}
                  </Badge>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <Dialog>
                <DialogTrigger asChild>
                  <Button>Show Live Feed</Button>
                </DialogTrigger>
                <DialogContent>
                  <DialogHeader>
                    <DialogTitle>Live Feed for {pico.id}</DialogTitle>
                    <DialogDescription>
                      A real-time feed of the commands generated by block placements on this Pico.
                      This view is read-only.
                    </DialogDescription>
                  </DialogHeader>
                  <LiveCommandFeed macAddress={pico.macAddress} />
                </DialogContent>
              </Dialog>
            </CardContent>
          </Card>
        )
      })}
    </>
  )
}
