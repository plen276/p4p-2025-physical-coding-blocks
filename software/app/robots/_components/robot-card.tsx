"use client"

import { Robot } from "@/app/generated/prisma"
import { StatusBubble } from "@/components/status-bubble"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog"
import { Cpu } from "lucide-react"
import LiveCommandFeed from "./live-command-feed"

interface RobotCardProps {
  robot: Robot
}

export default function RobotCard({ robot }: RobotCardProps) {
  return (
    <Card key={robot.id} className="relative">
      <CardHeader className="pb-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center gap-3">
            <StatusBubble status={robot.status === "online" ? "online" : "offline"} />
            <div>
              <CardTitle className="text-lg">Robot Controller {robot.id}</CardTitle>
              <CardDescription className="flex items-center gap-2">
                <Cpu className="h-3 w-3" />
                {robot.macAddress}
              </CardDescription>
            </div>
          </div>
          <div className="flex flex-col items-end gap-1">
            <Badge variant={robot.status === "online" ? "default" : "outline"}>
              {robot.status}
            </Badge>
          </div>
        </div>
      </CardHeader>
      <CardContent>
        <Dialog>
          <DialogTrigger asChild>
            <Button>Show Live Feed</Button>
          </DialogTrigger>
          <DialogContent>
            <DialogHeader>
              <DialogTitle>Live Feed for {robot.id}</DialogTitle>
              <DialogDescription>
                A real-time feed of the commands generated by block placements on this Robot. This
                view is read-only.
              </DialogDescription>
            </DialogHeader>
            <LiveCommandFeed macAddress={robot.macAddress} />
          </DialogContent>
        </Dialog>
      </CardContent>
    </Card>
  )
}
